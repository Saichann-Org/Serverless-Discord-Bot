org: saichann
app: aws-discord-bot
service: discord-bot

provider:
  name: aws
  stage: ${opt:stage, "develop"}
  region: ${opt:region, "ap-northeast-1"}
  ecr:
    images:
      core:
        path: ./
  # Lambda関連
  # architecture: arm64
  runtime: python3.11
  memorySize: 128
  timeout: 60
  versionFunctions: true
  iam:
    role: LambdaExecutionRole
  # デプロイ用S3バケット設定
  deploymentBucket:
    name: ${self:service}-${self:stage}-deployment-bucket-${aws:accountId}
  # X-Rayトレース設定
  tracing:
    apiGateway: true
    lambda: true
  tags:
    Project: ${self:service}
    Create: ServerlessFramework
  # resources部のタグ設定
  stackTags:
    Project: ${self:service}
    Create: ServerlessFramework
  logs:
    httpApi: true

  httpApi:
    name: ${self:service}-api

  environment:
    VERSION: "1.0.0"
    TZ: Asia/Tokyo
    RESOURCE_NAME_PREFIX: ${param:resourceNamePrefix}
    APPLICATION_ID: ${env:APPLICATION_ID}
    DISCORD_PUBLIC_KEY: ${env:DISCORD_PUBLIC_KEY}
    BOT_TOKEN: ${env:BOT_TOKEN}

# plugins:
#   - serverless-prune-plugin
#   - serverless-offline

# custom:
# prune:
#   automatic: true
#   number: 3

params:
  develop:
    resourceNamePrefix: ${self:service}-develop
  production:
    resourceNamePrefix: ${self:service}

functions:
  router:
    name: ${param:resourceNamePrefix}-router
    events:
      - httpApi:
          method: "*"
          path: /
    image:
      name: core
      command:
        - src.router.main.lambda_handler
  updateSlashCommand:
    name: ${param:resourceNamePrefix}-update-slash-command
    image:
      name: core
      command:
        - src.common.update_slash_command.lambda_handler
  dog:
    name: ${param:resourceNamePrefix}-dog
    image:
      name: core
      command:
        - src.commands.dog.lambda_handler

resources:
  - ${file(./cloudformation/iam.yml)}
